<html>

<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.3.2/cropper.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.3.2/cropper.min.css" rel="stylesheet">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.3.2/cropper.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.3.2/cropper.min.js"></script>
    <script src="/js/jquery-cropper.js"></script>
    <script src="/js/photomosaic.js"></script>
    <link rel="stylesheet" type="text/css" href="/css/upload.css" />

</head>

<body style="background-image:url(/src/bg.png); background-size:cover;">
    <input type="file" id="fileInput" accept="image/*" />

    <div class='original'></div>


    <div class="crop" style="display:none">
        <h3 style="color: #FFFFFF">Crop</h3>
        <canvas id="canvas">
          </canvas>
          <input type="button" id="btnCrop" value="Crop" />
          <input type="button" id="btnRestore" value="Restore" />

    </div>

    <div id="result"></div>
    <!--
    <div class='mosaic-class' style="display:none">
          <canvas id="canvas1"></canvas>
          <button id='revoked'>撤銷</button>
-->
    </div>

</body>

</html>
<script>
    $(document).ready(function() {
        var canvas = $("#canvas");
        var context = canvas.get(0).getContext("2d");

        /*
        var canvas1 = $("#canvas1");
        var context1 = canvas1.get(0).getContext("2d");
        var quan = 3; //马赛克的大小
        var num = 9; //一次操作包含马赛克的个数
*/
        $('body').on('change', '#fileInput', function() {
            console.log(context);
            console.log(this.files[0]);
            if (this.files && this.files[0]) {
                if (this.files[0].type.match(/^image\//)) {
                    var reader = new FileReader();
                    reader.onload = function(evt) {
                        console.log(evt);
                        var img = new Image();
                        img.onload = function() {
                            context.canvas.height = img.height;
                            context.canvas.width = img.width;
                            console.log(img);
                            context.drawImage(img, 0, 0);
                            var cropper = canvas.cropper({
                                aspectRatio: 16 / 9,
                                viewMode: 1,
//                                minCropBoxWidth: 640.797,
//                                minCropBoxHeight: 360.078,
//                                maxCropBoxWidth: 640.797,
//                                maxCropBoxHeight: 360.078
                            });
                            $('.crop').css('display','block');
                            $('#btnCrop').click(function() {
                                // Get a string base 64 data url
                                var croppedImageDataURL = canvas.cropper('getCroppedCanvas').toDataURL("image/png");
                                $('#result').append('<h3>After cropping</h3><img src="'+croppedImageDataURL+'" id="picture">');
                                setTimeout(
                                  function()
                                  {
                                      $('#result').append('<h5 style="color:#ffffff">裁切後尺寸為'+$('#picture').css('width')+' x '+$('#picture').css('height')+'</h5>');
                                      $('#result').append('<h4>輸入回傳圖片比例</h4><input type="number" name="width" placeholder="width"><input type="number" name="height" placeholder="height"><input type="button" id="btnsave" value="Save" />');
                                }, 300);
                                //canvas1[0].width = canvas.cropper('getCroppedCanvas').width;
                                //canvas1[0].height = canvas.cropper('getCroppedCanvas').height;

                                //console.log(canvas1[0].width);
                                //make_mosaic(croppedImageDataURL);
                            });
                            $('#btnRestore').click(function() {
                                canvas.cropper('reset');
                                $('#result').empty();
                            });
                        };
                        img.src = evt.target.result;
                        $('.original').css( "background-image", "url("+img.src+")" );
                        $('.original').css( "background-size", 'contain' );
                        $('.original').css( "background-repeat", 'no-repeat' );

                    };
                    console.log(this.files[0]);
                    reader.readAsDataURL(this.files[0]);
                } else {
                    alert("Invalid file type! Please select an image file.");
                }
            } else {
                alert('No file(s) selected.');
            }
        });
        $('body').on('click', '#btnsave', function(){
            apple = dataURItoBlob($('#picture').attr('src'));
            console.log(apple);
            let form = new FormData();
            form.append('file',apple);
            form.append('width',$('input[name=width]').val());
            form.append('height',$('input[name=height]').val());
            if($('input[name=width]').val() == '' || $('input[name=height]').val() == ''){
                alert('請輸入長寬');
            } else{
                $.ajax({
                    url: '/ajax_save',
                    type: 'POST',
                    data: form,
                    processData: false,
                    contentType: false,
                    success: function(data){
                      if(data.status){
                          console.log(data);
                          $('#result').append('<h3>'+data.width+' x '+data.height+'縮圖</h3><img src="/src/'+data.filename+'">');
                      } else {
                          alert(data.msg);
                      }
                    }
                });
            }

        });
        function dataURItoBlob(dataURI) {
            // convert base64/URLEncoded data component to raw binary data held in a string
            var byteString;
            if (dataURI.split(',')[0].indexOf('base64') >= 0)
                byteString = atob(dataURI.split(',')[1]);
            else
                byteString = unescape(dataURI.split(',')[1]);

            // separate out the mime component
            var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];

            // write the bytes of the string to a typed array
            var ia = new Uint8Array(byteString.length);
            for (var i = 0; i < byteString.length; i++) {
                ia[i] = byteString.charCodeAt(i);
            }

            return new Blob([ia], {type:mimeString});
        }
/*
        function make_mosaic(img){
            var imgObj = new Image();
            imgObj.crossOrigin = "Anonymous";
            imgObj.src = img;
            console.log(img);
            //待图片加载完后，将其显示在canvas上

            imgObj.onload = function(){
              context1.drawImage(this, 0, 0, canvas1[0].width, canvas1[0].height);//this即是imgObj,保持图片的原始大小
              $('.mosaic-class').css('display','block');
              start(this);
            }
        }

        function start(obj){
            let length = $('.cropper-container').css('height').length;
            let n = $('.cropper-container').css('height').substring(0,length-2);
            let h = 400 + Number(n);
            let length1 = $('#result').css('height').length;
            let h1 = Math.round(Number($('#picture').css('height').substring(0,length1-2)));
            let t = (360-h1);
            console.log(t);
            //修改缓存
            var lastImgArr = [];
            canvas1[0].onmousedown = function(ev){
                //每次下笔前先保存
                lastImgArr.push(context1.getImageData(0,0,canvas1[0].width,canvas1[0].height));
                var ev=ev || window.event;
                var dx = ev.clientX-canvas1[0].offsetLeft;
                var dy = ev.clientY+h+230-t-canvas1[0].offsetTop;
                console.log(dy);
                console.log(canvas1[0].offsetTop);
                drawLine(obj,dx,dy);
                document.onmousemove = function(ev){
                    console.log('move');
                    var ev = ev || window.event;
                    var mx = ev.clientX-canvas1[0].offsetLeft;
                    var my = ev.clientY-canvas1[0].offsetTop;
                    if(Math.pow(dx-mx,2)+Math.pow(dy-my,2)>= Math.pow(quan*num,2)){  //(quan*马赛克个数*2)的平方
                      drawLine(obj,mx,my);
                      dx = mx;
                      dy = my;
                    }
                };
                document.onmouseup = function(){
                    document.onmousemove = null;
                    document.onmouseup = null;
                };
            }
            document.getElementById('revoked').onclick = function(){
              if(lastImgArr && lastImgArr.length){
                context.putImageData(lastImgArr.pop(), 0, 0);
              }
            }
        }

          function drawLine(obj,dx,dy){

            //原始图像
            var originalImgData = context1.getImageData(0,0,canvas1[0].width,canvas1[0].height);
            var originalPxData = originalImgData.data;

            //用于循环修改
            var modifyImgData = context1.getImageData(0,0,canvas1[0].width,canvas1[0].height);
            var modifyPxData = modifyImgData.data;
            for(var i=dx-quan*num;i<dx+quan*num;i = i+2*quan+1){
              for(var j=dy-quan*num;j<dy+quan*num;j = j+2*quan+1){
                //中心点(dx,dy)
                // if(Math.pow(i-dx,2)+Math.pow(j-dy,2) <= Math.pow(quan*num/2,2)){
                if(!((i==dx-quan*num&&j==dy-quan*num)||(i==dx-quan*num&&j==dy-quan*num+2*quan+1)||
                  (i==dx-quan*num&&j==dy-quan*num+4*quan+2)||(i==dx-quan*num&&j==dy-quan*num+12*quan+6)||
                  (i==dx-quan*num&&j==dy-quan*num+14*quan+7)||(i==dx-quan*num&&j==dy-quan*num+16*quan+8)||
                  (i==dx-quan*num+16*quan+8&&j==dy-quan*num)||(i==dx-quan*num+16*quan+8&&j==dy-quan*num+2*quan+1)||
                  (i==dx-quan*num+16*quan+8&&j==dy-quan*num+4*quan+2)||(i==dx-quan*num+16*quan+8&&j==dy-quan*num+12*quan+6)||
                  (i==dx-quan*num+16*quan+8&&j==dy-quan*num+14*quan+7)||(i==dx-quan*num+16*quan+8&&j==dy-quan*num+16*quan+8)||
                  (i==dx-quan*num+2*quan+1&&j==dy-quan*num)||(i==dx-quan*num+4*quan+2&&j==dy-quan*num)||
                  (i==dx-quan*num+12*quan+6&&j==dy-quan*num)||(i==dx-quan*num+14*quan+7&&j==dy-quan*num)||
                  (i==dx-quan*num+2*quan+1&&j==dy-quan*num+16*quan+8)||(i==dx-quan*num+4*quan+2&&j==dy-quan*num+16*quan+8)||
                  (i==dx-quan*num+12*quan+6&&j==dy-quan*num+16*quan+8)||(i==dx-quan*num+14*quan+7&&j==dy-quan*num+16*quan+8))){
                var sumR = 0;
                var sumG = 0;
                var sumB = 0;
                //找他周围的元素
                for(var x = -quan;x<=quan;x++){
                    for(var y = -quan;y<=quan;y++){
                      var xx = i+x;
                      var yy = j+y;
                      var pp = yy*canvas1[0].width+xx; //周围的元素。
                      sumR += originalPxData[pp*4+0];
                      sumG += originalPxData[pp*4+1];
                      sumB += originalPxData[pp*4+2];
                    }
                }

                var totlal = (2*quan+1)*(2*quan+1);
                var avgR = sumR/totlal;
                var avgG = sumG/totlal;
                var avgB = sumB/totlal;

                for(var x = -quan;x<=quan;x++){
                  for(var y = -quan;y<=quan;y++){
                    var xx = i+x;
                    var yy = j+y;
                    var pp = yy*canvas1[0].width+xx; //周围的元素。
                    modifyPxData[pp*4+0] = avgR;
                    modifyPxData[pp*4+1] = avgG;
                    modifyPxData[pp*4+2] = avgB;
                  }
                }
              }
            }
            }

            context1.putImageData(modifyImgData, 0, 0, 0, 0, canvas1[0].width, canvas1[0].height);
          }
          */
    });
</script>
